<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Lazy Snack</title>
    <link>https://ysjune.github.io/categories/javascript/</link>
    <description>Recent content in javascript on Lazy Snack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>windsyou@gmail.com (snack)</managingEditor>
    <webMaster>windsyou@gmail.com (snack)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 08 Dec 2019 13:24:59 +0900</lastBuildDate>
    
        <atom:link href="https://ysjune.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>7. 함수 표현식</title>
        <link>https://ysjune.github.io/posts/javascript/chapter7/function/</link>
        <pubDate>Sun, 08 Dec 2019 13:24:59 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/chapter7/function/</guid>
        <description>다루는 내용 함수 표현식의 특징 함수와 재귀 클로저를 이용한 고유(프라이빗) 변수 1. 함수 표현식의 특징 함수를 정의하는 방법은 함수 선언과 함수 표현식 2가지가 있음</description>
      </item>
      
      <item>
        <title>2. HTML 속의 자바스크립트</title>
        <link>https://ysjune.github.io/posts/javascript/chapter2/chapter2/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/chapter2/chapter2/</guid>
        <description>다루는 내용 &amp;lt;script&amp;gt; 요소 사용 인라인 스크립트와 외부 스크립트의 비교 문서 모드가 자바스크립트에 미치는 영향 자바스크립트가 비활성화된 상황에 대한 대비 1. &amp;lt;Script&amp;gt; 요소 여섯가</description>
      </item>
      
      <item>
        <title>3. 언어의 기초</title>
        <link>https://ysjune.github.io/posts/javascript/chapter3/%EC%96%B8%EC%96%B4%EC%9D%98-%EA%B8%B0%EC%B4%88/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/chapter3/%EC%96%B8%EC%96%B4%EC%9D%98-%EA%B8%B0%EC%B4%88/</guid>
        <description>다루는 내용 문법 데이터 타입 제어문 함수 1. 문법 대소문자를 구분 식별자 -&amp;gt; 변수, 함수, 프로퍼티, 함수 매개변수의 이름으로 관습적으로 카멜 케이스를 사용 camelCase 스트릭</description>
      </item>
      
      <item>
        <title>4. 변수, 스코프, 메모리</title>
        <link>https://ysjune.github.io/posts/javascript/chapter4/%EB%B3%80%EC%88%98%EC%8A%A4%EC%BD%94%ED%94%84%EB%A9%94%EB%AA%A8%EB%A6%AC/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/chapter4/%EB%B3%80%EC%88%98%EC%8A%A4%EC%BD%94%ED%94%84%EB%A9%94%EB%AA%A8%EB%A6%AC/</guid>
        <description>다루는 내용 변수의 원시값과 참조값 실행 컨텍스트의 이해 가비지 컬렉션의 이해 1. 원시값과 참조값 원시값은 기본타입(문자열, null, undefined etc), 참조값은 메모리에 저장된 객체</description>
      </item>
      
      <item>
        <title>5. 참조 타입</title>
        <link>https://ysjune.github.io/posts/javascript/chapter5/%EC%B0%B8%EC%A1%B0-%ED%83%80%EC%9E%85/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/chapter5/%EC%B0%B8%EC%A1%B0-%ED%83%80%EC%9E%85/</guid>
        <description>다루는 내용 객체로 작업하기 배열 생성하고 조작하기 자바스크립트의 데이터 타입 이해 원시 데이터 및 원시 래퍼로 작업하기 1. 객체로 작업하기 객체란 참조 타입이며 클래</description>
      </item>
      
      <item>
        <title>6. 객체 지향 프로그래밍</title>
        <link>https://ysjune.github.io/posts/javascript/chapter6/%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/chapter6/%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</guid>
        <description>다루는 내용 객체 프로퍼티의 이해 객체의 이해와 생성 상속의 이해 1. 객체 프로퍼티의 이해 객체는 특별한 순서가 없는 값의 배열 (key-value 쌍의 그룹) 가장 단순한 방법은 1 2 3 4</description>
      </item>
      
      <item>
        <title>Apply,Call,Bind 에 대해</title>
        <link>https://ysjune.github.io/posts/javascript/etc/applycallbind/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/etc/applycallbind/</guid>
        <description>apply, call, bind 서버 사이드인 java 의 this 와 javascript 의 this 가 헷갈리는 부분이 많은데, this 와 관련된 내용인 call, apply, bind 에 대한 내용이 5장(참조 타입) 에 나와 이 부분은 따로 정리해보고자 한다</description>
      </item>
      
      <item>
        <title>Object.assign 에 대해</title>
        <link>https://ysjune.github.io/posts/javascript/etc/object.assign-%EC%97%90-%EB%8C%80%ED%95%B4/</link>
        <pubDate>Sun, 08 Dec 2019 01:52:37 +0900</pubDate>
        <author>windsyou@gmail.com (snack)</author>
        <guid>https://ysjune.github.io/posts/javascript/etc/object.assign-%EC%97%90-%EB%8C%80%ED%95%B4/</guid>
        <description>자바스크립트 4장에서 객체 복사에 대한 내용을 다루다가 Object.assign() 을 통해 복사가 가능하다는 얘기를 잠깐 했었는데, 자세히 모르니 이번 기회에 짚고 넘어가보자 Object.assign() 우선 MDN 에서</description>
      </item>
      
    
  </channel>
</rss>